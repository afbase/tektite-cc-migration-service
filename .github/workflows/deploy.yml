name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
          
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
          
      - name: Install Dioxus CLI
        run: |
          if ! command -v dx &> /dev/null; then
            echo "Installing Dioxus CLI..."
            cargo install dioxus-cli --version 0.5.7
          else
            echo "Dioxus CLI already installed: $(dx --version)"
          fi
        
      - name: Build for GitHub Pages
        run: |
          echo "Building Dioxus web application..."
          # Use BUILD command with correct flags and verbose output
          dx build --platform web --package web --release --verbose
          
          echo "Build complete. Checking output directory..."
          # The output should be in dist/ for web platform builds
          ls -la ./dist/ || echo "dist/ directory not found, checking alternatives..."
          ls -la ./target/dx/ || echo "No dx target directory"
          find . -name "index.html" -type f 2>/dev/null | head -10
        
      - name: Create CNAME file for custom domain
        run: |
          # Dioxus web builds output to ./dist/ directory
          if [ -d "./dist" ]; then
            echo "tektite.cc" > ./dist/CNAME
            echo "Created CNAME file in ./dist/"
          else
            echo "Warning: dist directory not found, searching for output..."
            find . -type d -name "dist" -o -name "public" 2>/dev/null
          fi
          
      - name: Add 404 page for SPA routing
        run: |
          if [ -f "./dist/index.html" ]; then
            cp ./dist/index.html ./dist/404.html
            echo "Created 404.html for SPA routing"
          else
            echo "index.html not found in dist/"
          fi
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Dioxus web platform builds output to dist/
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4